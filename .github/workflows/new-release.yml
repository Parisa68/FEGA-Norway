name: NEW Release

on:
  push:

jobs:
  detect:
    uses: ./.github/workflows/detect-changed-components.yml

  release:
    needs: detect
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.detect.outputs.changed-components).component }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get new Version
        id: get-new-tag
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: ${{matrix.component}}-

      - name: setup java
        if: ${{ matrix.component == 'clearinghouse' || matrix.component == 'crypt4gh' || matrix.component == 'tsd-file-api-client' }}
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: publish jar files
        if: ${{ matrix.component == 'clearinghouse' || matrix.component == 'crypt4gh' || matrix.component == 'tsd-file-api-client' }}
        run: |
          ./gradlew :lib:${{matrix.component}}:publish -Pversion=${{ steps.get-new-tag.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Repository Name
        if: ${{ matrix.component == 'localega-tsd-proxy' || matrix.component == 'tsd-api-mock' || matrix.component == 'cega-mock' || matrix.component == 'mq-interceptor' }}
        id: repo_name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "repo_name=$REPO_NAME" >> $GITHUB_ENV
      - name: Log in to the Github Container registry
        if: ${{ matrix.component == 'localega-tsd-proxy' || matrix.component == 'tsd-api-mock' || matrix.component == 'cega-mock' || matrix.component == 'mq-interceptor' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Retag
        if: ${{ matrix.component == 'localega-tsd-proxy' || matrix.component == 'tsd-api-mock' || matrix.component == 'cega-mock' || matrix.component == 'mq-interceptor' }}
        run: |
          docker pull ghcr.io/${{ env.repo_name }}:${{matrix.component}}-${{ github.event.number }}
          docker tag ghcr.io/${{ env.repo_name }}:${{matrix.component}}-${{ github.event.number }} ghcr.io/${{ env.repo_name }}:${{matrix.component}}-${{ steps.get-new-tag.outputs.new_tag }}
          docker push ghcr.io/${{ env.repo_name }}:${{matrix.component}}-${{ steps.get-new-tag.outputs.new_tag }}

      - name: Create and push new tag
        if: ${{matrix.component == 'lega-commander'}}
        run: |
          git tag v${{ steps.get-new-tag.outputs.new_tag }} ${{ github.sha }}

      - name: Run GoReleaser
        if: ${{matrix.component == 'lega-commander'}}
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --clean
          workdir: cli/lega-commander
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CGO_ENABLED: "0"

      - name: Create GitHub release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "${{matrix.component}}-${{ steps.get-new-tag.outputs.new_tag }}"
          prerelease: false



